package aoc;/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;

public class App {

    private final List<Instruction> input;

    public App(List<Instruction> input) {
        this.input = input;
    }

    public Integer getSolutionPart1() {
        int depth = 0;
        int horizontal = 0;

        for (Instruction instruction : input) {
            if (instruction.direction().equals("forward")) {
                horizontal += instruction.units();
            }
            if (instruction.direction().equals("down")) {
                depth += instruction.units();
            }
            if (instruction.direction().equals("up")) {
                depth -= instruction.units();
            }
        }
        return depth * horizontal;
    }

    public Integer getSolutionPart2() {
        int aim = 0;
        int depth = 0;
        int horizontal = 0;

        for (Instruction instruction : input) {
            if (instruction.direction().equals("forward")) {
                horizontal += instruction.units();
                depth += aim * instruction.units();
            }
            if (instruction.direction().equals("down")) {
                aim += instruction.units();
            }
            if (instruction.direction().equals("up")) {
                aim -= instruction.units();
            }
        }
        return depth * horizontal;
    }

    public static void main(String[] args) throws IOException {
        System.out.println("java");
        List<Instruction> input = parseInput("input.txt");
        String part = System.getenv("part") == null ? "part1" : System.getenv("part");
        if (part.equals("part2"))
            System.out.println(new App(input).getSolutionPart2());
        else
            System.out.println(new App(input).getSolutionPart1());
    }

    private static List<Instruction> parseInput(String filename) throws IOException {
        return Files.lines(Path.of(filename))
                .map(line -> {
                    String[] words = line.split(" ");
                    return new Instruction(words[0], Integer.parseInt(words[1]));
                })
                .toList();
    }
}